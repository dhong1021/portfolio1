# {'n_neighbors': 1, 'weights': 'distance', 'p': 2}

# 3.	K-최근접 이웃(K-Nearest Neighbors, KNN)
print("전처리 후 모든 컬럼 사용 - 정규화함")
cross_validate_custom(train_x_std, train_y, KNeighborsClassifier(n_neighbors=1, weights='distance', p=2))

#하이퍼파라미터 튜닝
cross_validate_custom(train_x_std, train_y, KNeighborsClassifier(n_neighbors=1, weights='distance', p=2, metric='minkowski', algorithm='auto', leaf_size=40))

model = KNeighborsClassifier(n_neighbors=1, weights='distance', p=2)
model.fit(train_x_std,train_y)

df_test_x = df_test[features]

for col in df_test_x.columns:
    try:
        df_test_x.loc[:, col] = df_test_x[col].astype(float)
    except:
        continue

# 정규화
# sc = StandardScaler()
df_test_x_std = sc.transform(df_test_x)
df_test_x_std = pd.DataFrame(df_test_x_std, columns=df_test_x.columns)

test_pred = model.predict(df_test_x_std)

test_pred = np.where(test_pred == 1, "AbNormal", "Normal")
